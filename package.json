{
  "name": "codescan-vscode",
  "displayName": "CodeScan",
  "description": "Linter to detect & fix coding issues locally in JS/TS, Apex, HTML/CSS, Java, Python, C++, Go, IaC. Use with CodeScan for optimal team performance.",
  "version": "2.0.0",
  "icon": "images/codescan_128px.png",
  "publisher": "codescansf",
  "homepage": "https://www.codescan.io/codescan-static-code-analysis/",
  "repository": {
    "type": "git",
    "url": "https://github.com/codescan-io/sonarlint-vscode.git"
  },
  "bugs": {
    "url": "https://support.autorabit.com/",
    "email": "support@codescan.com"
  },
  "license": "SEE LICENSE IN LICENSE.txt",
  "engines": {
    "vscode": "^1.73.0"
  },
  "categories": [
    "Linters"
  ],
  "keywords": [
    "IaC",
    "Code Quality",
    "Go",
    "C++",
    "Java",
    "JavaScript",
    "PHP",
    "Python",
    "TypeScript",
    "Code Analysis"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "capabilities": {
    "virtualWorkspaces": false
  },
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "CodeScan",
      "properties": {
        "codescan.rules": {
          "order": 1,
          "type": "object",
          "scope": "application",
          "default": {},
          "markdownDescription": "Customize applied rule set. This property contains a list of rules whose activation level or parameter values differ from the one provided by default. See _CodeScan Rules_ view for the full list of available rules. In connected mode, this configuration is overridden by the projects's quality profile, as configured on server side.\n\nExample:\n\n    \"codescan.rules\": {\n        \"javascript:1481\": {\n            \"level\": \"off\",\n        \"javascript:S103\": {\n            \"level\": \"on\",\n            \"parameters\": {\n                \"maximumLineLength\": \"120\"\n            }\n        }\n    }\n",
          "patternProperties": {
            "^[^:]+:[^:]+$": {
              "type": "object",
              "markdownDescription": "Property names are rule keys in the form: `repo:key`",
              "properties": {
                "level": {
                  "type": "string",
                  "enum": [
                    "off",
                    "on"
                  ],
                  "markdownDescription": "When set to `off`, disable the rule. When set to `on`, enable the rule."
                },
                "parameters": {
                  "type": "object",
                  "markdownDescription": "Rule parameters. See rule description for accepted parameters. E.g `{ \"intParam\": \"123\" }`."
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "codescan.connectedMode.servers": {
          "deprecationMessage": "The setting is deprecated. Use `codescan.connectedMode.connections.servers` instead.",
          "type": "array",
          "scope": "application",
          "default": [],
          "markdownDescription": "Configure one or more connection(s) to CodeScan. For security reasons, the token should not be stored in SCM with workspace settings. The `serverId` can be any identifier and will be referenced in `#codescan.connectedMode.project#`.\n\nExample for CodeScan Cloud:\n\n    \"codescan.connectedMode.servers\": [\n      {\n        \"serverId\": \"my_orga_in_codescan.io\",\n        \"serverUrl\": \"https://app.codescan.io\",\n        \"organizationKey\": \"my_organization\",\n        \"token\": \"V2VkIE1...\"\n      }\n    ]\n\nExample for CodeScan Self-Hosted:\n\n    \"codescan.connectedMode.servers\": [\n      {\n        \"serverId\": \"my_codescan\",\n        \"serverUrl\": \"https://codescan.mycompany.com\",\n        \"token\": \"V2VkIE1...\"\n      }\n    ]",
          "items": {
            "properties": {
              "serverId": {
                "type": "string",
                "description": "A unique identifier for this server connection. Will be referenced from `#codescan.connectedMode.project#`"
              },
              "serverUrl": {
                "type": "string",
                "description": "URL of the server. Use https://app.codescan.io for CodeScan Cloud."
              },
              "token": {
                "type": "string",
                "description": "Token generated from My Account>Security in CodeScan"
              },
              "organizationKey": {
                "type": "string",
                "description": "Only used for CodeScan Cloud"
              }
            },
            "additionalProperties": false
          }
        },
        "codescan.connectedMode.connections.servers": {
          "order": 3,
          "type": "array",
          "scope": "application",
          "default": [],
          "markdownDescription": "In connected mode, CodeScan applies the quality profile to the local analysis and synchronizes the issue status and other analysis settings. Please find the documentation [here](https://github.com/codescan-io/codescan-vscode/wiki/Connected-Mode)",
          "items": {
            "type": "object",
            "properties": {
              "connectionId": {
                "type": "string",
                "description": "A unique identifier for this connection to be used as a reference in `#codescan.connectedMode.project#`. Only needed if you plan to use multiple connections to CodeScan."
              },
              "organizationKey": {
                "type": "string",
                "description": "A CodeScan organization key. If you want to bind different projects that are in different organizations, simply declare multiple connections."
              },
              "serverUrl": {
                "type": "string",
                "description": "URL of the CodeScan Self-Hosted server."
              },
              "token": {
                "type": "string",
                "description": "Token generated from 'My Account>Security' in CodeScan"
              },
              "isCloudConnection": {
                "type": "boolean",
                "description": "Flag that determines if the Codescan server plugin connects to is self-hosted or in the cloud."
              },
              "disableNotifications": {
                "type": "boolean",
                "description": "CodeScan will show notifications for bound projects when there are new issues assigned to you, or when the quality gate status changed. Set to false to disable all notifications for projects bound to this connection."
              }
            },
            "additionalProperties": false,
            "required": [
              "organizationKey",
              "serverUrl"
            ],
            "examples": [
              {
                "organizationKey": "<replace_with_your_codescan_organization_key>"
              },
              {
                "connectionId": "MyOrganization",
                "organizationKey": "<replace_with_your_codescan_organization_key>",
                "disableNotifications": false
              }
            ]
          }
        },
        "codescan.connectedMode.project": {
          "order": 4,
          "markdownDescription": "Bind the current workspace folder to [CodeScan](https://codescan.io)t. Requires connection details to be defined in the setting `#codescan.connectedMode.connections.servers#`.\n\nBinding a workspace folder to a project allows to use the same rules and configuration that are defined in the server, as well as issue suppressions.\n\nExample:\n\n    \"codescan.connectedMode.project\": {\n      \"projectKey\": \"my_project\"\n    }\n\nSpecify the `connectionId` only if you have defined multiple connections.",
          "examples": [
            {
              "projectKey": "<replace_with_server_project_key>"
            },
            {
              "connectionId": "<replace_with_connection_id>",
              "projectKey": "<replace_with_server_project_key>"
            }
          ],
          "default": {},
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "serverId": {
                  "type": "string",
                  "description": "Identifier of the server connection declared in `#codescan.connectedMode.connections.servers#`"
                },
                "projectKey": {
                  "type": "string",
                  "description": "Key of the project in CodeScan"
                }
              },
              "additionalProperties": false,
              "required": [
                "serverId",
                "projectKey"
              ],
              "deprecationMessage": "Replace `serverId` attribute by `connectionId`."
            },
            {
              "type": "object",
              "properties": {
                "connectionId": {
                  "type": "string",
                  "description": "Identifier of the server connection declared in `#codescan.connectedMode.connections.servers#`"
                },
                "projectKey": {
                  "type": "string",
                  "description": "Key of the project in CodeScan (can be found on project homepage)"
                }
              },
              "additionalProperties": false,
              "required": [
                "projectKey"
              ]
            }
          ],
          "scope": "resource"
        },
        "codescan.pathToNodeExecutable": {
          "order": 10,
          "type": "string",
          "markdownDescription": "Path to a Node.js executable (14.17.0 or more recent) used to analyze JavaScript and TypeScript code. \nOn Windows, backslashes must be escaped, e.g. `C:\\\\Program Files\\\\NodeJS\\\\14-lts\\\\bin\\\\node.exe`",
          "scope": "machine"
        },
        "codescan.pathToCompileCommands": {
          "order": 11,
          "type": "string",
          "markdownDescription": "Path to the active compilation database, e.g. `C:\\\\Repos\\\\MyProject\\\\compile_commands.json`",
          "scope": "resource"
        },
        "codescan.testFilePattern": {
          "order": 12,
          "type": "string",
          "default": "",
          "markdownDescription": "Files whose name match this [glob pattern](https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob) are considered as test files by analyzers. Most rules are *not* evaluated on test files. Example: `{**/test/**,**/*test*,**/*Test*}`",
          "scope": "resource"
        },
        "codescan.ls.javaHome": {
          "order": 20,
          "type": "string",
          "markdownDescription": "Path to a Java Runtime Environment (11 or more recent) used to launch the CodeScan Language Server.\n* On Windows, backslashes must be escaped, e.g. `C:\\\\Program Files\\\\Java\\\\jdk-11.0.12+7` \n* On macOS, this path should include the `/Contents/Home` directory, e.g `/Library/Java/JavaVirtualMachines/jdk-11.0.12+7.jdk/Contents/Home`",
          "scope": "machine"
        },
        "codescan.ls.vmargs": {
          "order": 21,
          "type": "string",
          "markdownDescription": "Extra JVM arguments used to launch the CodeScan Language Server. e.g. `-Xmx1024m`",
          "scope": "machine"
        },
        "codescan.httpclient.version": {
          "type": "string",
          "markdownDescription": "This argument will help customer to choose their HTTP protocol version. Default value is 'NEGOTIATE'",
          "scope": "machine"
        },
        "codescan.output.showVerboseLogs": {
          "order": 90,
          "type": "boolean",
          "default": false,
          "description": "Enable verbose log level in the CodeScan output.",
          "scope": "window"
        },
        "codescan.output.showAnalyzerLogs": {
          "order": 91,
          "type": "boolean",
          "default": false,
          "description": "Show analyzer's logs in the CodeScan output.",
          "scope": "window"
        },
        "codescan.analyzerProperties": {
          "order": 92,
          "type": "object",
          "patternProperties": {
            "^.*$": {
              "type": "string",
              "markdownDescription": "One entry value"
            },
            "additionalProperties": false
          },
          "markdownDescription": "Extra properties that could be passed to the code analyzers. Only for advanced use cases.",
          "scope": "resource"
        },
        "codescan.trace.server": {
          "order": 98,
          "default": "off",
          "description": "Traces the communication between VS Code and the CodeScan language server.",
          "scope": "window",
          "anyOf": [
            {
              "type": "string",
              "enum": [
                "off",
                "messages",
                "verbose"
              ],
              "default": "off"
            },
            {
              "type": "object",
              "properties": {
                "verbosity": {
                  "type": "string",
                  "enum": [
                    "off",
                    "messages",
                    "verbose"
                  ],
                  "default": "off"
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "text",
                    "json"
                  ],
                  "default": "text"
                }
              },
              "additionalProperties": false
            }
          ]
        }
      }
    },
    "commands": [
      {
        "command": "CodeScan.UpdateAllBindings",
        "title": "Update all project bindings of CodeScan",
        "icon": "$(refresh)",
        "category": "CodeScan"
      },
      {
        "command": "CodeScan.ShowCodeScanOutput",
        "title": "Show CodeScan Output",
        "category": "CodeScan"
      },
      {
        "command": "CodeScan.ConfigureCompilationDatabase",
        "title": "Configure the compilation database for C and C++ analysis",
        "category": "CodeScan"
      },
      {
        "command": "CodeScan.AutoBindWorkspaceFolders",
        "title": "Bind all workspace folders to CodeScan",
        "category": "CodeScan"
      },
      {
        "command": "CodeScan.DeactivateRule",
        "title": "Deactivate",
        "icon": "$(x)",
        "enablement": "view == CodeScan.AllRules"
      },
      {
        "command": "CodeScan.ActivateRule",
        "title": "Activate",
        "icon": "$(check)",
        "enablement": "view == CodeScan.AllRules"
      },
      {
        "command": "CodeScan.ResetDefaultRule",
        "title": "Reset",
        "enablement": "view == CodeScan.AllRules"
      },
      {
        "command": "CodeScan.ShowAllRules",
        "title": "All",
        "enablement": "view == CodeScan.AllRules"
      },
      {
        "command": "CodeScan.ShowActiveRules",
        "title": "Active",
        "enablement": "view == CodeScan.AllRules"
      },
      {
        "command": "CodeScan.ShowInactiveRules",
        "title": "Inactive",
        "enablement": "view == CodeScan.AllRules"
      },
      {
        "command": "CodeScan.ScanForHotspotsInFolder",
        "title": "In Whole Folder",
        "enablement": "view == CodeScan.SecurityHotspots && CodeScan.Hotspots.ShowMode == 'OpenFiles'"
      },
      {
        "command": "CodeScan.ShowHotspotsInOpenFiles",
        "title": "In Open Files",
        "enablement": "view == CodeScan.SecurityHotspots && CodeScan.Hotspots.ShowMode == 'Folder'"
      },
      {
        "command": "CodeScan.FindRuleByKey",
        "title": "Find Rule By Key",
        "enablement": "view == CodeScan.AllRules"
      },
      {
        "command": "CodeScan.ClearLocations",
        "title": "Clear",
        "enablement": "view == CodeScan.IssueLocations || view == CodeScan.SecurityHotspots"
      },
      {
        "command": "CodeScan.ClearHotspotLocations",
        "title": "Clear Highlighting",
        "enablement": "view == CodeScan.SecurityHotspots"
      },
      {
        "command": "CodeScan.ConnectToCodeScan",
        "title": "Connect to CodeScan",
        "category": "CodeScan",
        "icon": "$(plus)"
      },
      {
        "command": "CodeScan.EditCodeScanCloudConnection",
        "title": "Edit CodeScan Cloud Connection",
        "category": "CodeScan",
        "icon": "$(pencil)",
        "enablement": "view == CodeScan.ConnectedMode"
      },
      {
        "command": "CodeScan.AddProjectBinding",
        "title": "Add Project Binding",
        "category": "CodeScan",
        "icon": "$(plus)",
        "enablement": "view == CodeScan.ConnectedMode"
      },
      {
        "command": "CodeScan.RemoveConnection",
        "title": "Remove CodeScan Connection",
        "category": "CodeScan",
        "icon": "$(trash)",
        "enablement": "view == CodeScan.ConnectedMode"
      },
      {
        "command": "CodeScan.EditProjectBinding",
        "title": "Edit Project Binding",
        "category": "CodeScan",
        "icon": "$(pencil)",
        "enablement": "view == CodeScan.ConnectedMode"
      },
      {
        "command": "CodeScan.RemoveProjectBinding",
        "title": "Remove Project Binding",
        "category": "CodeScan",
        "icon": "$(trash)",
        "enablement": "view == CodeScan.ConnectedMode"
      },
      {
        "command": "CodeScan.OpenHotspotOnServer",
        "title": "Review on Server",
        "category": "CodeScan",
        "enablement": "view == CodeScan.SecurityHotspots && viewItem == knownHotspotItem"
      },
      {
        "command": "CodeScan.ShowHotspotRuleDescription",
        "title": "Show Rule Description",
        "category": "CodeScan",
        "enablement": "view == CodeScan.SecurityHotspots && viewItem == newHotspotItem"
      },
      {
        "command": "CodeScan.ShowHotspotDetails",
        "title": "Show Hotspot Details",
        "category": "CodeScan",
        "enablement": "view == CodeScan.SecurityHotspots && (viewItem == knownHotspotItem || viewItem == remoteHotspotItem)"
      },
      {
        "command": "CodeScan.HideHotspot",
        "title": "Hide Security Hotspot",
        "category": "CodeScan",
        "enablement": "view == CodeScan.SecurityHotspots && viewItem == remoteHotspotItem"
      },
      {
        "command": "CodeScan.ChangeHotspotStatus",
        "title": "Change Status",
        "category": "CodeScan",
        "enablement": "view == CodeScan.SecurityHotspots && viewItem == knownHotspotItem"
      },
      {
        "command": "CodeScan.HelpAndFeedbackLinkClicked",
        "title": "Share feedback",
        "category": "CodeScan"
      },
      {
        "command": "CodeScan.EnableVerboseLogs",
        "title": "Enable Verbose Logging",
        "category": "CodeScan"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "icon": "images/codescan.svg",
          "id": "CodeScan",
          "title": "CodeScan"
        }
      ]
    },
    "views": {
      "explorer": [
        {
          "id": "CodeScan.IssueLocations",
          "name": "CodeScan Issue Locations"
        }
      ],
      "CodeScan": [
        {
          "id": "CodeScan.ConnectedMode",
          "name": "Connected Mode"
        },
        {
          "id": "CodeScan.SecurityHotspots",
          "name": "Security Hotspots"
        },
        {
          "id": "CodeScan.HelpAndFeedback",
          "name": "Help and Feedback"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "CodeScan.IssueLocations",
        "contents": "No locations to show.\nUse \"Show all locations\" code action from a CodeScan issue."
      },
      {
        "view": "CodeScan.ConnectedMode",
        "contents": "No CodeScan connections found.\n[Add CodeScan Connection](command:CodeScan.ConnectToCodeScan)"
      },
      {
        "view": "CodeScan.SecurityHotspots",
        "contents": "Please ensure a connection to CodeScan is set up. Detected Security Hotspots will be displayed here. [Learn More](https://github.com/codescan-io/codescan-vscode/wiki/security-hotspots).\n Using the In Whole Folder feature may consume excessive resources depending on the size of your project. Please check the [documentation](https://github.com/codescan-io/codescan-vscode/wiki/security-hotspots#reporting-security-hotspots-in-the-whole-folder) for recommendations to minimize the impact of a full project analysis."
      }
    ],
    "walkthroughs": [
      {
        "id": "CodeScan.walkthrough",
        "title": "Welcome to CodeScan!",
        "description": "Your Clean Code journey starts here.",
        "steps": [
          {
            "id": "CodeScan.inAction",
            "title": "$(rocket) New to CodeScan? See it in action",
            "description": "CodeScan for VSCode supports analysis of 15+ languages including JS/TS, Apex, Java, CSS/HTML, C, C++, and more. CodeScan detects issues in all files **open** in the editor.\n\nThe best way to get started is to see it in action!\n[Open Sample File](command:CodeScan.OpenSample)",
            "media": {
              "markdown": "walkthrough/empty.md"
            },
            "completionEvents": [
              "onView:workbench.panel.markers.view"
            ]
          },
          {
            "id": "CodeScan.learnMoreAboutIssues",
            "title": "$(book) Learn more about issues",
            "description": "Check the [Problems view](command:workbench.panel.markers.view.focus): CodeScan has found something $(warning).\nRight-click on the issue found by CodeScan.\nOpen the rule description: CodeScan clearly explains why this is an issue.\nFor certain rules and issues, CodeScan will suggest available Quick Fixes.",
            "media": {
              "markdown": "walkthrough/empty.md"
            },
            "completionEvents": [
              "onCommand:CodeScan.OpenStandaloneRuleDesc"
            ]
          },
          {
            "id": "CodeScan.connectedModeIntro",
            "title": "$(link) Connect with your team",
            "description": "Use the same code standards as your team by using CodeScan in Connected Mode with [CodeScan](https://www.codescan.io/) or CodeScan Self-hosted..\n**Already using CodeScan?** Check out the Connected Mode view to set up the connection.\n[Set up Connection](command:CodeScan.ConnectedMode.focus)",
            "media": {
              "markdown": "walkthrough/empty.md"
            },
            "completionEvents": [
              "onView:CodeScan.ConnectedMode"
            ]
          },
          {
            "id": "CodeScan.reachOut",
            "title": "$(comment-discussion) Share feedback or ask for help",
            "description": "You suspect your code has issues but don't see any problems detected by CodeScan? [Enable verbose logging](command:CodeScan.EnableVerboseLogs) and check the output in the CodeScan Output window\n[Check Output](command:CodeScan.ShowCodeScanOutput)\n\nYou'd like to learn more about CodeScan, or give us feedback? Check out the [Help and Feedback view](command:CodeScan.HelpAndFeedback.focus)\n\n",
            "media": {
              "markdown": "walkthrough/empty.md"
            },
            "completionEvents": [
              "onView:CodeScan.HelpAndFeedback"
            ]
          }
        ]
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "CodeScan.ShowAllRules",
          "when": "view == CodeScan.AllRules",
          "group": "navigation"
        },
        {
          "command": "CodeScan.ShowActiveRules",
          "when": "view == CodeScan.AllRules",
          "group": "navigation"
        },
        {
          "command": "CodeScan.ShowInactiveRules",
          "when": "view == CodeScan.AllRules",
          "group": "navigation"
        },
        {
          "command": "CodeScan.ScanForHotspotsInFolder",
          "when": "view == CodeScan.SecurityHotspots",
          "group": "navigation"
        },
        {
          "command": "CodeScan.ShowHotspotsInOpenFiles",
          "when": "view == CodeScan.SecurityHotspots",
          "group": "navigation"
        },
        {
          "command": "CodeScan.FindRuleByKey",
          "when": "view == CodeScan.AllRules"
        },
        {
          "command": "CodeScan.ClearLocations",
          "when": "view == CodeScan.IssueLocations",
          "group": "navigation"
        },
        {
          "command": "CodeScan.ConnectToCodeScan",
          "when": "view == CodeScan.ConnectedMode",
          "group": "inline"
        },
        {
          "command": "CodeScan.UpdateAllBindings",
          "when": "view == CodeScan.ConnectedMode",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "CodeScan.ConnectToCodeScan",
          "when": "view == CodeScan.ConnectedMode && viewItem == sonarQubeGroup",
          "group": "inline"
        },
        {
          "command": "CodeScan.EditCodeScanCloudConnection",
          "title": "Edit",
          "when": "view == CodeScan.ConnectedMode && viewItem == sonarcloudConnection",
          "group": "inline"
        },
        {
          "command": "CodeScan.AddProjectBinding",
          "title": "Add Project Binding",
          "when": "view == CodeScan.ConnectedMode && viewItem == sonarcloudConnection || viewItem == sonarqubeConnection",
          "group": "inline"
        },
        {
          "command": "CodeScan.RemoveConnection",
          "title": "Remove",
          "when": "view == CodeScan.ConnectedMode && viewItem == sonarcloudConnection || viewItem == sonarqubeConnection",
          "group": "inline"
        },
        {
          "command": "CodeScan.EditProjectBinding",
          "title": "Edit",
          "when": "view == CodeScan.ConnectedMode && viewItem == workspaceFolder",
          "group": "inline"
        },
        {
          "command": "CodeScan.RemoveProjectBinding",
          "title": "Remove",
          "when": "view == CodeScan.ConnectedMode && viewItem == workspaceFolder",
          "group": "inline"
        },
        {
          "command": "CodeScan.ShowHotspotRuleDescription",
          "title": "Show Rule Description",
          "when": "view == CodeScan.SecurityHotspots && viewItem == newHotspotItem"
        },
        {
          "command": "CodeScan.ShowHotspotDetails",
          "title": "Show Hotspot Details",
          "when": "view == CodeScan.SecurityHotspots && (viewItem == knownHotspotItem || viewItem == remoteHotspotItem)"
        },
        {
          "command": "CodeScan.ChangeHotspotStatus",
          "title": "Change Status",
          "when": "view == CodeScan.SecurityHotspots && viewItem == knownHotspotItem"
        },
        {
          "command": "CodeScan.OpenHotspotOnServer",
          "title": "Review on Server",
          "when": "view == CodeScan.SecurityHotspots && viewItem == knownHotspotItem"
        },
        {
          "command": "CodeScan.ClearHotspotLocations",
          "title": "Clear Highlighting",
          "when": "view == CodeScan.SecurityHotspots && viewItem == newHotspotItem || viewItem == knownHotspotItem || viewItem == remoteHotspotItem"
        },
        {
          "command": "CodeScan.HideHotspot",
          "title": "Hide Security Hotspot",
          "category": "CodeScan",
          "when": "view == CodeScan.SecurityHotspots && viewItem == remoteHotspotItem"
        }
      ]
    },
    "colors": [
      {
        "id": "sonarlint.locations.background",
        "description": "Background color for highlighted secondary locations of CodeScan issues",
        "defaults": {
          "light": "#f2dede",
          "dark": "#523e3e",
          "highContrast": "#523e3e"
        }
      },
      {
        "id": "sonarlint.locations.indexText",
        "description": "Text color for secondary location index of CodeScan issues",
        "defaults": {
          "light": "#fff",
          "dark": "#ccc",
          "highContrast": "#ccc"
        }
      },
      {
        "id": "sonarlint.locations.indexBackground",
        "description": "Background color for secondary location index of CodeScan issues",
        "defaults": {
          "light": "#d18582",
          "dark": "#74232f",
          "highContrast": "#74232f"
        }
      },
      {
        "id": "sonarlint.locations.indexSelectedText",
        "description": "Text color for active secondary location index of CodeScan issues",
        "defaults": {
          "light": "#fff",
          "dark": "#fff",
          "highContrast": "#fff"
        }
      },
      {
        "id": "sonarlint.locations.indexSelectedBackground",
        "description": "Background color for active secondary location index of CodeScan issues",
        "defaults": {
          "light": "#a4030f",
          "dark": "#b4131f",
          "highContrast": "#b4131f"
        }
      }
    ],
    "icons": {
      "security-hotspot": {
        "description": "Security Hotspot",
        "default": {
          "fontPath": "icons/sonarlint.woff",
          "fontCharacter": "H"
        }
      }
    }
  },
  "main": "./dist/extension",
  "files": [
    "server/sonarlint-ls.jar",
    "analyzers"
  ],
  "scripts": {
    "vscode:prepublish": "node scripts/prepare.js && webpack --mode production",
    "compile": "tsc -p ./",
    "webpack": "webpack --mode development",
    "pretest": "webpack --mode development && tsc -p ./",
    "test": "node out/test/runTest.js",
    "test-cov": "node out/test/runTest.js --coverage",
    "prepare": "node scripts/prepare.js",
    "cyclonedx-run": "cyclonedx-node",
    "cyclonedx": "gulp cycloneDx"
  },
  "dependencies": {
    "@vscode/webview-ui-toolkit": "1.0.0",
    "compare-versions": "4.1.3",
    "diff": "^5.1.0",
    "expand-home-dir": "0.0.3",
    "find-java-home": "1.2.2",
    "follow-redirects": "1.15.1",
    "highlight.js": "^11.7.0",
    "inly": "4.0.8",
    "luxon": "^3.2.1",
    "node-html-parser": "^6.1.5",
    "path-exists": "4.0.0",
    "properties": "1.2.1",
    "underscore": "^1.13.6",
    "vscode-languageclient": "^8.0.2"
  },
  "devDependencies": {
    "@cyclonedx/bom": "^3.8.0",
    "@types/chai": "^4.2.10",
    "@types/follow-redirects": "1.13.1",
    "@types/glob": "8.0.0",
    "@types/lodash": "^4.14.194",
    "@types/luxon": "^3.2.0",
    "@types/mocha": "10.0.0",
    "@types/node": "^10.17.17",
    "@types/vscode": "^1.73.1",
    "@vscode/test-electron": "^2.3.0",
    "chai": "^4.2.0",
    "crypto": "^0.0.3",
    "dateformat": "^2.0.0",
    "del": "^2.2.2",
    "expect.js": "^0.3.1",
    "fancy-log": "1.3.3",
    "fs-extra": "^10.1.0",
    "glob": "^8.0.3",
    "gulp": "4.0.2",
    "gulp-artifactory-upload": "^1.4.0",
    "gulp-bump": "3.2.0",
    "gulp-cli": "2.3.0",
    "gulp-decompress": "^3.0.0",
    "gulp-download": "^0.0.1",
    "gulp-exec": "5.0.0",
    "gulp-rename": "^1.4.0",
    "istanbul-lib-coverage": "^2.0.5",
    "istanbul-lib-instrument": "^3.3.0",
    "istanbul-lib-report": "^2.0.8",
    "istanbul-lib-source-maps": "^3.0.6",
    "istanbul-reports": "^2.2.7",
    "map-stream": "^0.1.0",
    "mocha": "10.1.0",
    "mocha-multi-reporters": "^1.5.1",
    "openpgp": "^5.2.1",
    "prettier": "2.0.5",
    "sonarqube-scanner": "2.8.2",
    "stream": "^0.0.2",
    "through2": "^2.0.5",
    "ts-loader": "9.4.1",
    "typescript": "^4.9.5",
    "vinyl": "^2.2.1",
    "vsce": "^2.15.0",
    "webpack": "5.76.0",
    "webpack-cli": "4.10.0"
  },
  "prettier": {
    "jsxBracketSameLine": true,
    "printWidth": 120,
    "singleQuote": true,
    "tabWidth": 2,
    "useTabs": false,
    "arrowParens": "avoid",
    "trailingComma": "none",
    "bracketSpacing": true
  }
}
